@model AIII.Models.ManageAccountViewModel

@{
    ViewBag.Title = "ManageAccount";
}
<div class="row">

    <h2>Personal Account</h2>
    <p class="text-success">@ViewBag.StatusMessage</p>
    <br />

    <div class="col-4"></div>
    <div class="col-3 left">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <h4 class="form-group text-primary">@User.Identity.Name</h4>

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <label class="col-form-label mt-4" for="inputDefault">
                    ImDb Key
                    @Html.TextBoxFor(model => model.ImdbKey, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ImdbKey, "", new { @class = "text-danger " })
                </label>
            </div>
            <br />
            <div class="form-group">
                <div>
                    <a class="btn btn-primary" href="@Url.Action("ChangePassword")">Change password</a>
                    <button type="submit" value="Save" class="btn btn-secondary">Save</button>
                </div>
            </div>
        }
    </div>
    <div class="left col-2">
        <div>
            <a href="@Url.Action("UserLikedMovies")">
                <img class="icon" src="~/source/like.png" />
                <span class="count"> @Model.LikesAmount</span>
            </a>
        </div>
        <br />
        <div>
            <a href="@Url.Action("UserDislikedMovies")">
                <img class="icon" src="~/source/dislike.png" />
                <span class="count"> @Model.DislikesAmount</span>
            </a>
        </div>
        <br />
        <div>

            <a href="@Url.Action("UserWatchedMovies")">
                <img class="icon" src="~/source/watched.png" />
                <span class="count"> @Model.WatchedFilmsAmount</span>
            </a>
        </div>
    </div>
    <div class="col-3"></div>

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

